name: $(date:yyyyMMdd)$(rev:.r)
trigger:
 branches:
   include: ['development']

resources:
- repo: self

pool:
  vmImage: 'ubuntu-16.04'

variables:
  resourcegroup: 'coding-coach-rg'
  location: 'West Europe'
  registry: 'codingcoachacr'
  beimage: 'coding-coach-be'
  subscription: 'coding-coach-service-connection'
  devdbname: 'coding-coach-dev-db'
  plan: 'coding-coach-plan'
  sku: 'B1 Basic'
  registrySku: 'Basic'

steps:
- task: AzureResourceGroupDeployment@2
  displayName: 'Create or update Private Docker registry'
  inputs:
    azureSubscription: '$(subscription)'
    resourceGroupName: '$(resourcegroup)'
    location: '$(location)'
    csmFile: '$(System.DefaultWorkingDirectory)/azure-templates/container-registry-template.json'
    overrideParameters: '-registryName "$(registry)" -registryLocation "$(location)" -registrySku "Basic"'

- task: AzureResourceGroupDeployment@2
  displayName: 'Create or update Private MongoDB'
  inputs:
    azureSubscription: '$(subscription)'
    resourceGroupName: '$(resourcegroup)'
    location: '$(location)'
    csmFile: '$(System.DefaultWorkingDirectory)/azure-templates/container-cosmosdb-template.json'
    overrideParameters: '-name "$(devdbname)"'

- task: AzureResourceGroupDeployment@2
  displayName: 'Create or Update Azure App Service'
  inputs:
    azureSubscription: '$(subscription)'
    resourceGroupName: '$(resourcegroup)'
    location: '$(location)'
    csmFile: '$(System.DefaultWorkingDirectory)/azure-templates/container-webapp-template.json'
    overrideParameters: '-webAppName $(beimage) -hostingPlanName $(plan) -sku "$(sku)" -registryName "$(registry)" -registryLocation "$(location)" -registrySku "$(registrySku)" -imageName $(beimage):$(Build.BuildNumber)'

- task: Docker@1
  displayName: 'Build an image'
  inputs:
    azureSubscriptionEndpoint: '$(subscription)'
    azureContainerRegistry: '$(registry).azurecr.io'
    useDefaultContext: false
    buildContext: '$(System.DefaultWorkingDirectory)'
    imageName: '$(beimage):$(Build.BuildNumber)'

- task: Docker@1
  displayName: 'Publish an image'
  inputs:
    azureSubscriptionEndpoint: '$(subscription)'
    azureContainerRegistry: '$(registry).azurecr.io'
    command: 'Push an image'
    imageName: '$(beimage):$(Build.BuildNumber)'

- task: CopyFiles@2
  displayName: 'Copy App templates'
  inputs:
    SourceFolder: azure-templates
    TargetFolder: '$(build.artifactstagingdirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
